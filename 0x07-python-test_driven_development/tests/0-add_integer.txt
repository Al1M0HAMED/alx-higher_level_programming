0-add_integer.py
================

This module contains a function `add_integer(a, b=98)` that adds two integers.
If the inputs are floats, they are cast to integers before addition.
If the inputs are invalid, the function raises appropriate exceptions.

Examples:
---------

>>> add_integer = __import__('0-add_integer').add_integer

### Valid cases
>>> add_integer(2, 3)
5
>>> add_integer(2.5, 3.9)
5
>>> add_integer(-1.2, 1.8)
0
>>> add_integer(100, 200.6)
300
>>> add_integer(100, 10)
110
>>> add_integer(2.2, 2)
4
>>> add_integer(-2.0, -4.0)
-6

### Invalid cases - Type Errors
>>> add_integer('a', 200.6)
Traceback (most recent call last):
TypeError: a must be an integer
>>> add_integer(100, 'gg')
Traceback (most recent call last):
TypeError: b must be an integer
>>> add_integer(None)
Traceback (most recent call last):
TypeError: a must be an integer
>>> add_integer(2.3, None)
Traceback (most recent call last):
TypeError: b must be an integer

### Special Cases - Floating Point Exceptions
>>> add_integer(float('inf'))
Traceback (most recent call last):
OverflowError: cannot convert float infinity to integer
>>> add_integer(float('nan'))
Traceback (most recent call last):
ValueError: cannot convert float NaN to integer

### Default argument
>>> add_integer(2)
100
